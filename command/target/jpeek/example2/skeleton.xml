<?xml version="1.0" encoding="UTF-8"?>
<skeleton date="2020-12-26T02:27:12.959543Z"
          schema="xsd/skeleton.xsd"
          version="${project.version}">
   <app id="D:\HSE\BUSINESS RF\JPEEK DOCS\java patterns\command\out\production\command\org\jpeek\patterns\example2">
      <package id="org.jpeek.patterns.example2">
         <class id="WriteFileCommand"><!--Package: org.jpeek.patterns.example2; name: org.jpeek.patterns.example2.WriteFileCommand; file: org.jpeek.patterns.example2.WriteFileCommand-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/jpeek/patterns/example2/FileSystemReceiver">fileSystem</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Lorg/jpeek/patterns/example2/FileSystemReceiver;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/jpeek/patterns/example2/FileSystemReceiver">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">fileSystem</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="execute"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">fileSystem</op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.FileSystemReceiver.writeFile</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="FileInvoker"><!--Package: org.jpeek.patterns.example2; name: org.jpeek.patterns.example2.FileInvoker; file: org.jpeek.patterns.example2.FileInvoker-->
            <attributes>
               <attribute final="false"
                          public="true"
                          static="false"
                          type="Lorg/jpeek/patterns/example2/Command">command</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Lorg/jpeek/patterns/example2/Command;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/jpeek/patterns/example2/Command">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">command</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="execute"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">command</op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.Command.execute</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="CloseFileCommand"><!--Package: org.jpeek.patterns.example2; name: org.jpeek.patterns.example2.CloseFileCommand; file: org.jpeek.patterns.example2.CloseFileCommand-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/jpeek/patterns/example2/FileSystemReceiver">fileSystem</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Lorg/jpeek/patterns/example2/FileSystemReceiver;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/jpeek/patterns/example2/FileSystemReceiver">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">fileSystem</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="execute"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">fileSystem</op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.FileSystemReceiver.closeFile</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="OpenFileCommand"><!--Package: org.jpeek.patterns.example2; name: org.jpeek.patterns.example2.OpenFileCommand; file: org.jpeek.patterns.example2.OpenFileCommand-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/jpeek/patterns/example2/FileSystemReceiver">fileSystem</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Lorg/jpeek/patterns/example2/FileSystemReceiver;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/jpeek/patterns/example2/FileSystemReceiver">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">fileSystem</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="execute"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">fileSystem</op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.FileSystemReceiver.openFile</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="Example2Demo"><!--Package: org.jpeek.patterns.example2; name: org.jpeek.patterns.example2.Example2Demo; file: org.jpeek.patterns.example2.Example2Demo-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.FileSystemReceiverUtil.getUnderlyingFileSystem</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.OpenFileCommand.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/FileSystemReceiver">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.FileInvoker.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/Command">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.FileInvoker.execute</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.WriteFileCommand.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/FileSystemReceiver">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.FileInvoker.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/Command">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.FileInvoker.execute</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.CloseFileCommand.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/FileSystemReceiver">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.FileInvoker.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/Command">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.FileInvoker.execute</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="WindowsFileSystemReceiver"><!--Package: org.jpeek.patterns.example2; name: org.jpeek.patterns.example2.WindowsFileSystemReceiver; file: org.jpeek.patterns.example2.WindowsFileSystemReceiver-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="openFile"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="writeFile"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="closeFile"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="UnixFileSystemReceiver"><!--Package: org.jpeek.patterns.example2; name: org.jpeek.patterns.example2.UnixFileSystemReceiver; file: org.jpeek.patterns.example2.UnixFileSystemReceiver-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="openFile"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="writeFile"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="closeFile"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="FileSystemReceiverUtil"><!--Package: org.jpeek.patterns.example2; name: org.jpeek.patterns.example2.FileSystemReceiverUtil; file: org.jpeek.patterns.example2.FileSystemReceiverUtil-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/jpeek/patterns/example2/FileSystemReceiver;"
                       name="getUnderlyingFileSystem"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>Lorg/jpeek/patterns/example2/FileSystemReceiver</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.contains</name>
                        <args>
                           <arg type="Ljava/lang/CharSequence">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.WindowsFileSystemReceiver.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.UnixFileSystemReceiver.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
   </app>
</skeleton>
