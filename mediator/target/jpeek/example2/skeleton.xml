<?xml version="1.0" encoding="UTF-8"?>
<skeleton date="2020-12-26T01:51:24.248137700Z"
          schema="xsd/skeleton.xsd"
          version="${project.version}">
   <app id="D:\HSE\BUSINESS RF\JPEEK DOCS\java patterns\mediator\out\production\mediator\org\jpeek\patterns\example2">
      <package id="org.jpeek.patterns.example2">
         <class id="User"><!--Package: org.jpeek.patterns.example2; name: org.jpeek.patterns.example2.User; file: org.jpeek.patterns.example2.User-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/jpeek/patterns/example2/ChatMediator">mediator</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/lang/String">name</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Lorg/jpeek/patterns/example2/ChatMediator;Ljava/lang/String;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/jpeek/patterns/example2/ChatMediator">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">mediator</op>
                     <op code="put">name</op>
                  </ops>
               </method>
               <method abstract="true"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)V"
                       name="send"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
               </method>
               <method abstract="true"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)V"
                       name="receive"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
               </method>
            </methods>
         </class>
         <class id="ChatMediatorImpl"><!--Package: org.jpeek.patterns.example2; name: org.jpeek.patterns.example2.ChatMediatorImpl; file: org.jpeek.patterns.example2.ChatMediatorImpl-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/List">users</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">users</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/jpeek/patterns/example2/User;)V"
                       name="addUser"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/jpeek/patterns/example2/User">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get">users</op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;Lorg/jpeek/patterns/example2/User;)V"
                       name="sendMessage"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Lorg/jpeek/patterns/example2/User">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get">users</op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.User.receive</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="Example2Demo"><!--Package: org.jpeek.patterns.example2; name: org.jpeek.patterns.example2.Example2Demo; file: org.jpeek.patterns.example2.Example2Demo-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.ChatMediatorImpl.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.UserImpl.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/ChatMediator">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.UserImpl.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/ChatMediator">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.UserImpl.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/ChatMediator">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.UserImpl.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/ChatMediator">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.ChatMediator.addUser</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/User">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.ChatMediator.addUser</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/User">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.ChatMediator.addUser</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/User">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.ChatMediator.addUser</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/User">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.User.send</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="UserImpl"><!--Package: org.jpeek.patterns.example2; name: org.jpeek.patterns.example2.UserImpl; file: org.jpeek.patterns.example2.UserImpl-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Lorg/jpeek/patterns/example2/ChatMediator;Ljava/lang/String;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/jpeek/patterns/example2/ChatMediator">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.User.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jpeek/patterns/example2/ChatMediator">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)V"
                       name="send"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="get">name</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">mediator</op>
                     <op code="call">
                        <name>org.jpeek.patterns.example2.ChatMediator.sendMessage</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/jpeek/patterns/example2/User">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)V"
                       name="receive"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="get">name</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
   </app>
</skeleton>
